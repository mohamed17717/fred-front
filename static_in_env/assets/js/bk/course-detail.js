const bk="https://thegoodzone.pythonanywhere.com";function createElmV2(html){const div=document.createElement("div");return div.innerHTML=html.trim(),div.childNodes[0]}function handleCurriculumCollapse(){const curriculumContainer=document.querySelector(".block__curriculum"),sections=curriculumContainer.querySelector(".block_curriculum_sections"),collapseBtn=createElmV2('  <button class="block__curriculum__view-all-lectures-btn" type="button"><span>Show All Lectures</span><img alt="show all lectures icon" class="block__curriculum__view-all-lectures-btn-icon__svg"  src="https://fedora.teachablecdn.com/assets/icons/chevron-down-solid-263093b97bd01b06adb0ad6caee9cc0ed3fd93607596fb8dee102ebd20d6d85e.svg">  </button>');console.log("sections: ",sections),setTimeout(()=>{let sectionHeight=sections.querySelector("section").clientHeight;sections.style.height=`${sectionHeight}px`,sections.style.overflow="hidden",sections.dataset.collapsestatus=1},2e3),collapseBtn.addEventListener("click",e=>{const status=sections.dataset.collapsestatus;if(1==status)sections.style.height="auto",sections.dataset.collapsestatus=0;else if(0==status){let sectionHeight=sections.querySelector("section").clientHeight;sections.style.height=`${sectionHeight}px`,sections.dataset.collapsestatus=1}}),curriculumContainer.appendChild(collapseBtn)}function getCourseStars(average){const count=5,star1='<div class="icon icon-star-fill"></div>',star0='<div class="icon icon-star-outline"></div>';let stars="";for(let i=0;i<5;i++)stars+=average>.44?star1:star0,average--;return stars}function renderCourseIntroRating(rating){const ratingContainer=document.querySelector("#course-intro .rating");ratingContainer.innerHTML=`<div>${rating.average}</div><div class="stars">  ${getCourseStars(rating.average)}</div><div>  (${rating.total} Ratings)</div>`}function renderCourseFeedbackRatingTotal(rating){const container=document.querySelector("#course-feedback .rating .total");container.innerHTML=`<div class="num">${rating.average}</div><div class="stars">  ${getCourseStars(rating.average)}</div><div>  (${rating.total} Ratings)</div>`}function renderCourseFeedbackRatingProgress(rating){const container=document.querySelector("#course-feedback .rating .detail");container.innerHTML=`<ul>  <li><div class="progress">  <div class="fill" style="width: ${rating.rates_counts[4]/rating.total*100}%;"></div></div><div>(5/5) - ${(rating.rates_counts[4]/rating.total*100).toFixed(1)}%</div>  </li>  <li><div class="progress">  <div class="fill" style="width: ${rating.rates_counts[3]/rating.total*100}%;"></div></div><div>(4/5) - ${(rating.rates_counts[3]/rating.total*100).toFixed(1)}%</div>  </li>  <li><div class="progress">  <div class="fill" style="width: ${rating.rates_counts[2]/rating.total*100}%;"></div></div><div>(3/5) - ${(rating.rates_counts[2]/rating.total*100).toFixed(1)}%</div>  </li>  <li><div class="progress">  <div class="fill" style="width: ${rating.rates_counts[1]/rating.total*100}%;"></div></div><div>(2/5) - ${(rating.rates_counts[1]/rating.total*100).toFixed(1)}%</div>  </li>  <li><div class="progress">  <div class="fill" style="width: ${rating.rates_counts[0]/rating.total*100}%;"></div></div><div>(1/5) - ${(rating.rates_counts[0]/rating.total*100).toFixed(1)}%</div>  </li></ul>`}function insertReview(review){const reviewsContainer=document.querySelector("#course-feedback .reviews .reviews-box");reviewsContainer.innerHTML+=`<div class="review">  <div class="author"><div class="avatar" style="background-image: url(${review.pp})"></div> </div>\n  <div class="info"><div class="name">${review.name}</div><div class="meta">  ${review.rating?`<div class="stars">  ${getCourseStars(review.rating.rate)}</div>`:""}  <div class="date">${review.created||"now"}</div></div><div class="opinion">  ${review.content}</div>  </div></div>\n`}function renderReviews(reviews){reviews.forEach(review=>{insertReview(review)})}function setStarColor(star,color){star.style.filter=color}function setPrevStarsColor(startStar,color){for(;startStar;)setStarColor(startStar,color),startStar=startStar.previousElementSibling}const postData=async(url,data)=>{const rawResponse=await fetch(url,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(data)});return rawResponse};function renderFeedbackRate(){const user=currentUser.email?currentUser:anonUser;console.log("user: ",user);const courseId=document.querySelector("[data-courseid]").dataset.courseid,userId=user.email||"16",ratingStars=document.querySelectorAll(".rating .rate .stars .icon"),starGreyColor="invert(0%) sepia(38%) saturate(7%) hue-rotate(119deg) brightness(90%) contrast(53%)",starMainColor="invert(45%) sepia(32%) saturate(2410%) hue-rotate(347deg) brightness(99%) contrast(93%)";fetch(`${bk}/rate/${courseId}/${userId}`).then(res=>200===res.status?res.json():null).then(userRate=>{if(userRate){const star=document.querySelector(`#course-feedback .rate .stars .icon:nth-child(${userRate.rate})`);setPrevStarsColor(star,starMainColor)}else ratingStars.forEach(star=>{star.addEventListener("mouseover",e=>setPrevStarsColor(star,starMainColor)),star.addEventListener("mouseout",e=>setPrevStarsColor(star,starGreyColor)),star.addEventListener("click",e=>setCourseRate(e,userId,courseId))})})}function setCourseRate(e,userId,courseId){const ratingStars=document.querySelectorAll(".rating .rate .stars .icon"),starMainColor="invert(45%) sepia(32%) saturate(2410%) hue-rotate(347deg) brightness(99%) contrast(93%)",star=e.target;postData(`${bk}/rate/${courseId}/`,{userId:userId,rate:star.dataset.ratevalue}).then(res=>res.status).then(status=>{200===status&&(setPrevStarsColor(star,starMainColor),ratingStars.forEach(s=>{const new_element=s.cloneNode(!0);s.parentNode.replaceChild(new_element,s)}))})}function notifyText(elm,text,old){const defaultText=old||elm.innerText;elm.innerText=text,elm.disabled=!0,setTimeout(()=>{elm.innerText=defaultText,elm.disabled=!1},2e3)}function setReview(){const user=currentUser.email?currentUser:anonUser;console.log("user: ",user);const courseId=document.querySelector("[data-courseid]").dataset.courseid,userId=user.email||"16",container=document.querySelector("#course-feedback .reviews .write");container.innerHTML=`<div class="author">  <div class="avatar" style="background-image: url(${user.pp})"></div> </div>\n<div class="info">  <div class="name">${user.name}</div>  <div><textarea name="review" id="review" placeholder="Leave a review..."></textarea>  </div>  <div class="bottom"><button class="solid">post comment</button>  </div></div>`,container.querySelector("button").addEventListener("click",e=>{notifyText(e.target,"loading...");const newComment={userId:userId,rate:e.target.dataset.ratevalue,...user,content:container.querySelector("textarea").value};postData(`${bk}/review/${courseId}/`,newComment).then(res=>res.status).then(status=>{200===status?(notifyText(e.target,"success!","post comment"),container.querySelector("textarea").value="",insertReview(newComment)):notifyText(e.target,"failed!","post comment")})})}function renderInstructor(instructor){const section=document.querySelector("#course-instructor"),container=section.querySelector(".card");instructor||section.remove(),container.innerHTML=`<div class="image" style="background-image: url(${instructor.pp})"></div><div class="info">  <h3>${instructor.name}  </h3> <p>${instructor.description}  </p>  <div class="social">${instructor.instagram&&'<a target="_blank" href="'+instructor.instagram+'" class="icon icon-insta"></a>'||""}${instructor.facebook&&'<a target="_blank" href="'+instructor.facebook+'" class="icon icon-fb"></a>'||""}${instructor.twitter&&'<a target="_blank" href="'+instructor.twitter+'" class="icon icon-twt"></a>'||""}${instructor.site&&'<a target="_blank" href="'+instructor.site+'" class="icon icon-site"></a>'||""}  </div></div>`}function getRecommendedCourses(){const courseIdElm=document.querySelector("[data-courseid]");if(!courseIdElm)return;const courseId=courseIdElm.dataset.courseid,section=document.querySelector("#course-suggest-courses"),container=section.querySelector(".courses"),url=`${bk}/random-related-courses/${courseId}/`;fetch(url).then(res=>200===res.status?res.json():[]).then(data=>{data.forEach(course=>{container.innerHTML+=`<div class="item card" data-to="${course.url}">  <div class="thumbnail" style="background-image: url(${course.thumbnail})"></div>\n  <div class="info"><h3><a href="${course.url}">${course.title}</a></h3>\n\n<div class="rating">  <div>${course.rating.average}</div>  <div class="stars">${getCourseStars(course.rating.average)}  </div>  <div>(${course.rating.total} Ratings)  </div></div>\n<p>  ${course.description}</p><div class="footer">  <div class="author"><div class="avatar" style="background-image: url(${course.author_pp})"></div><div class="name">${course.author_name}</div>  </div>  <div class="price">${course.price}</div></div>  </div></div>  `}),0===data.length&&section.remove()})}function renderCourseFeedbacks(){const courseId=document.querySelector("[data-courseid]").dataset.courseid,url=`${bk}/course/${courseId}`;console.log(url),fetch(url).then(res=>res.json()).then(data=>{console.log(data),renderCourseIntroRating(data.rating),renderReviews(data.reviews),renderCourseFeedbackRatingTotal(data.rating),renderCourseFeedbackRatingProgress(data.rating),renderInstructor(data.instructor)})}function getCurrentUserData(){const elm=document.querySelector("meta#fedora-data").dataset;let user={};return elm&&(user={img:elm.gravatarUrl,pp:elm.gravatarUrl,email:elm.email,name:elm.name}),user}const anonUser={name:"anonymous",email:"anon@anon.com",pp:"https://iptc.org/wp-content/uploads/2018/05/avatar-anonymous-300x300.png"};let currentUser=null;document.addEventListener("DOMContentLoaded",e=>{currentUser=getCurrentUserData(),console.log("currentUser: ",currentUser),handleCurriculumCollapse(),renderCourseFeedbacks(),renderFeedbackRate(),setReview(),getRecommendedCourses()});